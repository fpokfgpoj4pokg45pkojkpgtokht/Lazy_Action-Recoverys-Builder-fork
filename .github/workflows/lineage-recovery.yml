name: Lineage Recovery Builder

on:
  workflow_dispatch:
    inputs:
      MANIFEST_BRANCH:
        description: 'LineageOS Manifest Branch'
        required: true
        default: 'lineage-21.0'
        type: choice
        options:
        - lineage-21.0
        - lineage-20.0
        - lineage-19.1
      DEVICE_TREE:
        description: 'Custom Recovery Tree'
        required: true
        default: 'https://github.com/oliplusmzr/recovery_device_samsung_a24'
      DEVICE_TREE_BRANCH:
        description: 'Custom Recovery Tree Branch'
        required: true
        default: 'LineageRecovery'
      BUILD_TARGET:
        description: 'Build Target'
        required: true
        default: 'recovery'
        type: choice
        options:
        - recovery

jobs:
  build:
    name: Build Lineage Recovery by ${{ github.actor }}
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
    - name: Check Out
      uses: actions/checkout@v4
      
    - name: Display Inputs
      run: |
        echo "Manifest Branch: ${{ inputs.MANIFEST_BRANCH }}"
        echo "Device Tree: ${{ inputs.DEVICE_TREE }}"
        echo "Device Branch: ${{ inputs.DEVICE_TREE_BRANCH }}"
        echo "Build Target: ${{ inputs.BUILD_TARGET }}"

    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12

    - name: Set Lineage Manifest
      run: |
        echo "MANIFEST=https://github.com/LineageOS/android.git" >> $GITHUB_ENV

    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt -y install bc bison build-essential curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev libwxgtk3.0-gtk3-dev openjdk-8-jdk python3

    - name: Install Git-Repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo

    - name: Initialize Repo
      run: |
        mkdir android-recovery
        cd android-recovery
        git config --global user.name "lazycodebuilder"
        git config --global user.email "154446636+lazycodebuilder@users.noreply.github.com"
        repo init --depth=1 -u ${{ env.MANIFEST }} -b ${{ inputs.MANIFEST_BRANCH }}

    - name: Repo Sync
      run: |
        cd android-recovery
        repo sync -j$(nproc --all) --force-sync

    - name: Clone Device Tree
      run: |
        cd android-recovery
        git clone ${{ inputs.DEVICE_TREE }} -b ${{ inputs.DEVICE_TREE_BRANCH }} ./device_tree
        cd device_tree
        echo "COMMIT_ID=$(git rev-parse HEAD)" >> $GITHUB_ENV

    - name: Setup Device Tree
      run: |
        cd android-recovery/device_tree
        DEVICE_MAKEFILE=""
        DEVICE_DIRECTORY=""
        DEVICE_NAME=""
        for file in *.mk; do
            makefile=$(sed -n 's/^[[:space:]]*PRODUCT_NAME[[:space:]]*:=\s*.*/\1/p' "$file")
            brand=$(sed -n 's/^[[:space:]]*PRODUCT_BRAND[[:space:]]*:=\s*.*/\1/p' "$file")
            codename=$(sed -n 's/^[[:space:]]*PRODUCT_DEVICE[[:space:]]*:=\s*.*/\1/p' "$file")
            if [[ -n "$makefile" && -n "$brand" && -n "$codename" ]]; then
                DEVICE_MAKEFILE="$makefile"
                DEVICE_DIRECTORY="device/$brand"
                DEVICE_NAME="$codename"
                echo "DEVICE_MAKEFILE=${DEVICE_MAKEFILE}" >> $GITHUB_ENV
                echo "DEVICE_NAME=${DEVICE_NAME}" >> $GITHUB_ENV
                echo "DEVICE_DIRECTORY=${DEVICE_DIRECTORY}" >> $GITHUB_ENV
                break
            fi
        done
        cd ../
        mkdir -p "$DEVICE_DIRECTORY"
        mv device_tree "$DEVICE_DIRECTORY"/"$DEVICE_NAME"

    - name: Build Lineage Recovery
      run: |
        cd android-recovery
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch ${{ env.DEVICE_MAKEFILE }}-eng
        make clean
        make ${{ inputs.BUILD_TARGET }}image -j$(nproc --all)

    - name: Set Build Date
      run: |
        echo "BUILD_DATE=$(date +%Y%m%d)" >> $GITHUB_ENV

    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          android-recovery/out/target/product/${{ env.DEVICE_NAME }}/${{ inputs.BUILD_TARGET }}.img
        name: Unofficial Lineage Recovery for ${{ env.DEVICE_NAME }} // ${{ env.BUILD_DATE }}
        tag_name: ${{ github.run_id }}
        body: |
          Manifest: ${{ inputs.MANIFEST_BRANCH }}
          Tree: [Device Tree](${{ inputs.DEVICE_TREE }}/tree/${{ inputs.DEVICE_TREE_BRANCH }})
          Commit: [${{ env.COMMIT_ID }}](${{ inputs.DEVICE_TREE }}/commit/${{ env.COMMIT_ID }})
